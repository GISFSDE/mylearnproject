<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"

       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd

       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd">
    <!--IOC(工厂模式)-->
    <!--每个<bean ...>都有一个id标识，相当于Bean的唯一ID；
    在userServiceBean中，通过<property name="..." ref="..." />注入了另一个Bean；
    Bean的顺序不重要，Spring根据依赖关系会自动正确初始化。-->
    <bean name="source" class="pers.lxl.mylearnproject.frame.spring.ioc_di.pojo.Source">
        <property name="fruit" value="橙子"/>
        <property name="sugar" value="多糖"/>
        <property name="size" value="超大杯"/>
    </bean>
    <!--DI   DI 相对 IoC 而言，明确描述了“被注入对象依赖 IoC 容器配置依赖对象”-->
    <bean name="juickMaker" class="pers.lxl.mylearnproject.frame.spring.ioc_di.pojo.JuiceMaker">
        <property name="source" ref="source"/>
    </bean>
    <!--AOP-->
    <bean name="productService" class="pers.lxl.mylearnproject.frame.spring.aop.service.ProductService"/>
    <!--日志-->
    <bean id="loggerAspect" class="pers.lxl.mylearnproject.frame.spring.aop.aspect.LoggerAspect"/>

    <!-- 配置AOP -->
    <aop:config>
        <!-- where：pointcut在哪些地方（包.类.方法）做增加 -->
        <!--匹配所有类public方法  execution(public * *(..))
        匹配指定包下所有类方法 execution(* com.baidu.dao.*(..)) 不包含子包
        execution(* com.baidu.dao..*(..))  ..*表示包、子孙包下所有类
        匹配指定类所有方法 execution(* com.baidu.service.UserService.*(..))
        匹配实现特定接口所有类方法execution(* com.baidu.dao.GenericDAO+.*(..))
        匹配所有save开头的方法 execution(* save*(..))-->
        <aop:pointcut id="loggerCutpoint"
                      expression="execution(* pers.lxl.mylearnproject.frame.spring.aop.service.ProductService.*(..)) "/>

        <!-- what:aspect做什么增强 -->
        <aop:aspect id="logAspect" ref="loggerAspect">
            <!-- when:around在什么时机（方法前/后/前后） -->
            <aop:around pointcut-ref="loggerCutpoint" method="log"/>
        </aop:aspect>
    </aop:config>
</beans>